package LeetCode.linkedList;

/**
 * Created by GJQ on 2016/9/18.
 */
public class LC_141_LinkedListCycle {
    public boolean hasCycleTL(ListNode head) {
        if(head==null){
            return false;
        }
        ListNode node=head.next;
        while (node!=null){
            if(node==head){
                return true;
            }
            node=node.next;
        }
        return false;
    }

    public Boolean answer(ListNode head) {
        if (head == null || head.next == null) {
            return false;
        }
        ListNode fast, slow;
        fast = head.next;
        slow = head;
        while (fast != slow) {
            if(fast==null || fast.next==null)
                return false;
            fast = fast.next.next;
            slow = slow.next;
        }
        return true;
    }
}
