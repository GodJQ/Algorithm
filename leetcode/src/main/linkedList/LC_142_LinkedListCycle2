package LeetCode.linkedList;

/**
 * Created by GJQ on 2016/9/18.
 */
public class LC_142_LinkedListCycle2 {
    public ListNode detectCycle(ListNode head) {
        if(head==null||head.next==null){
            return null;
        }
        ListNode slower=head;
        ListNode faster=head.next;
        while(slower!=faster){
            if(faster==null||faster.next==null){
                return null;
            }
            slower=slower.next;
            faster=faster.next.next;
        }
        while (head!=slower.next){
            head=head.next;
            slower=slower.next;
        }
        return head;
    }
}
