package LeetCode.linkedList;

/**
 * Created by GJQ on 2016/9/13.
 */
public class LC_002_AddTwoNumbers {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null)return l2;
        if(l2==null)return l1;
        int sign=0;
        ListNode node=new ListNode(0),head=node;
        while(l1!=null&&l2!=null){
            if(l1.val+l2.val+sign>=10){
                ListNode temp=new ListNode(l1.val+l2.val-10+sign);
                node.next=temp;
                sign=1;
            }else{
                ListNode temp=new ListNode(l1.val+l2.val+sign);
                node.next=temp;
                sign=0;
            }
            l1=l1.next;
            l2 = l2.next;
            node=node.next;
        }
        while (l1 != null) {
            if (l1.val + sign >= 10) {
                ListNode temp = new ListNode(l1.val - 10 + sign);
                node.next = temp;
                sign = 1;
            } else {
                ListNode temp = new ListNode(l1.val + sign);
                node.next = temp;
                sign = 0;
            }
            l1 = l1.next;
            node=node.next;
        }
        while (l2 != null) {
            if (l2.val + sign >= 10) {
                ListNode temp = new ListNode(l2.val - 10 + sign);
                node.next = temp;
                sign = 1;
            } else {
                ListNode temp = new ListNode(l2.val + sign);
                node.next = temp;
                sign = 0;
            }
            l2 = l2.next;
            node=node.next;
        }
        if (sign==1)node.next=new ListNode(1);
        return head.next;
    }

    public ListNode answer(ListNode l1, ListNode l2) {
        if(l1==null)return l2;
        if(l2==null)return l1;
        int sign=0;
        ListNode node=new ListNode(0),head=node;
        while(l1!=null&&l2!=null){
            int sum=l1.val+l2.val+sign;
            node.next=new ListNode(sum%10);
            sign=sum/10;
            l1=l1.next;
            l2 = l2.next;
            node=node.next;
        }
        while (l1 != null) {
            int sum=l1.val+sign;
            node.next=new ListNode(sum%10);
            sign=sum/10;
            l1 = l1.next;
            node=node.next;
        }
        while (l2 != null) {
            int sum=l2.val+sign;
            node.next=new ListNode(sum%10);
            sign=sum/10;
            l2 = l2.next;
            node=node.next;
        }
        if (sign==1)node.next=new ListNode(1);
        return head.next;
    }
}
